"""initial_schema_with_all_tables

Revision ID: a0e01f23e14c
Revises: 
Create Date: 2025-10-24 01:16:01.862623

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a0e01f23e14c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schools',
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=False),
    sa.Column('academic_year', sa.String(), nullable=True),
    sa.Column('data_retention_policy', sa.JSON(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('school_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('COUNSELLOR', 'TEACHER', 'PRINCIPAL', 'PARENT', 'CLINICIAN', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('profile', sa.JSON(), nullable=True),
    sa.Column('availability', sa.JSON(), nullable=True),
    sa.Column('auth_provider', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.school_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('classes',
    sa.Column('class_id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('grade', sa.String(), nullable=False),
    sa.Column('section', sa.String(), nullable=True),
    sa.Column('academic_year', sa.String(), nullable=True),
    sa.Column('teacher_id', sa.UUID(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('additional_info', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.school_id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('class_id')
    )
    op.create_table('resources',
    sa.Column('resource_id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=True),
    sa.Column('type', sa.Enum('VIDEO', 'AUDIO', 'ARTICLE', name='resourcetype'), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'ARCHIVED', name='resourcestatus'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('video_url', sa.String(), nullable=True),
    sa.Column('audio_url', sa.String(), nullable=True),
    sa.Column('article_url', sa.String(), nullable=True),
    sa.Column('thumbnail_url', sa.String(), nullable=True),
    sa.Column('author_name', sa.String(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=True),
    sa.Column('posted_date', sa.DateTime(), nullable=False),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('target_audience', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('additional_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.school_id'], ),
    sa.PrimaryKeyConstraint('resource_id')
    )
    op.create_table('students',
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('pseudonym', sa.String(), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', 'PREFER_NOT_TO_SAY', name='gender'), nullable=True),
    sa.Column('class_id', sa.UUID(), nullable=True),
    sa.Column('parent_email', sa.String(), nullable=True),
    sa.Column('parent_phone', sa.String(), nullable=True),
    sa.Column('additional_info', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.class_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.school_id'], ),
    sa.PrimaryKeyConstraint('student_id')
    )
    op.create_table('assessments',
    sa.Column('assessment_id', sa.UUID(), nullable=False),
    sa.Column('template_id', sa.UUID(), nullable=True),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('responses', sa.JSON(), nullable=True),
    sa.Column('scores', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
    sa.PrimaryKeyConstraint('assessment_id')
    )
    op.create_table('cases',
    sa.Column('case_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('INTAKE', 'ASSESSMENT', 'INTERVENTION', 'MONITORING', 'CLOSED', name='casestatus'), nullable=False),
    sa.Column('risk_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='risklevel'), nullable=False),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('assigned_counsellor', sa.UUID(), nullable=True),
    sa.Column('ai_summary', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
    sa.PrimaryKeyConstraint('case_id')
    )
    op.create_table('observations',
    sa.Column('observation_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('reported_by', sa.UUID(), nullable=False),
    sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='severity'), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('audio_url', sa.String(), nullable=True),
    sa.Column('ai_summary', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
    sa.PrimaryKeyConstraint('observation_id')
    )
    op.create_table('journal_entries',
    sa.Column('entry_id', sa.UUID(), nullable=False),
    sa.Column('case_id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('visibility', sa.Enum('PRIVATE', 'SHARED', name='entryvisibility'), nullable=False),
    sa.Column('type', sa.Enum('SESSION_NOTE', 'OBSERVATION', 'ASSESSMENT_RESULT', 'CONTACT_LOG', name='entrytype'), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('audio_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['case_id'], ['cases.case_id'], ),
    sa.PrimaryKeyConstraint('entry_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('journal_entries')
    op.drop_table('observations')
    op.drop_table('cases')
    op.drop_table('assessments')
    op.drop_table('students')
    op.drop_table('resources')
    op.drop_table('classes')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('schools')
    # ### end Alembic commands ###
